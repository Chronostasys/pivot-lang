struct test {
    a : i64
    b : i64
    cc : i64name
}

struct i64name {
    a : i64
}

fn add(a: test) i64 {
    for let i = 0; i < 5; i = i + 1{
        a.a = a.a + 1
    }
    return a.a+a.b
}


fn main() i64 {
    printi64ln(0)
    let s = test{a:10,b:100,}
    printi64ln(add(s))
    let aa = add(s)
    let bb = add(s)
    let sb = s.cc.a
    sb = 0
    let x = 1
    let xx = (2+2)>0
    if 2  > 0 {
        x = s.a
    }
    while x<10 {
        x = x + 1
        printi64ln(x)
    }
    for let i = 0; i < 5; i = i + 1{
        let x = 0
        x = i
        printi64ln(x)
    }
    call()
    printi64ln(x)
    printi64ln(call())
    return test_vm_link()
}
fn test_vm_link() i64

fn call() i64 {
    printi64ln(99)
    return 55
}



fn printi64ln(i: i64) void
